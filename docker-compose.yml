version: '3'

networks:
  laravel:


volumes:
  dbdata:


services:
  app:
    build:
      context: ./dockerfiles
      dockerfile: nginx.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    ports:
      - "8075:80"
    volumes:
      - .:/var/www/html
    depends_on:
      - php
      - mysql
    networks:
      - laravel

  mysql:
    image: mariadb:10.6
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    environment:
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - dbdata:/var/lib/mysql
    networks:
      - laravel

  php:
    build:
      context: ./dockerfiles
      dockerfile: php.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    ports:
      - "9000:9000"
    volumes:
      - .:/var/www/html
      - ./dockerfiles/php/php.ini:/usr/local/etc/php/conf.d/my.ini
    networks:
      - laravel

  composer:
    build:
      context: ./dockerfiles
      dockerfile: php.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    volumes:
      - .:/var/www/html
    depends_on:
      - php
    entrypoint: [ 'composer', '--ignore-platform-reqs' ]
    networks:
      - laravel

  artisan:
    build:
      context: ./dockerfiles
      dockerfile: php.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    volumes:
      - .:/var/www/html
    depends_on:
      - mysql
    entrypoint: [ 'php', '/var/www/html/artisan' ]
    networks:
      - laravel

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    restart: unless-stopped
    depends_on:
      - mysql
    ports:
      - '${DOCKER_PHPMYADMIN_PORT}:80'
    environment:
      PMA_HOST: mysql
    networks:
      - laravel

  supervisor:
    container_name: supervisor
    build:
      context: ./dockerfiles
      dockerfile: supervisor.dockerfile
    restart: unless-stopped
    environment:
      - APP_ROOT=/var/www/html
      - QUEUE_DRIVER=${QUEUE_CONNECTION}
      - OPTIONS=${DOCKER_QUEUE_OPTIONS}
      - NUM_PROCS=${DOCKER_NUM_PROCS}
    volumes:
      - .:/var/www/html
    networks:
      - laravel
